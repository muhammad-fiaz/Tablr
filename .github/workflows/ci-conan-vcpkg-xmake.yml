name: CI - Conan / vcpkg / xmake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        config: [conan, vcpkg, xmake]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.25.0'

      - name: Install Ninja
        if: runner.os != 'Windows'
        run: sudo apt-get update && sudo apt-get install -y ninja-build || true

      - name: Conan + CMake build
        if: matrix.config == 'conan'
        run: |
          python -m pip install --upgrade pip
          python -m pip install conan
          conan install . --output-folder=build --build=missing
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      - name: vcpkg build
        if: matrix.config == 'vcpkg'
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            echo "Use the preinstalled vcpkg or bootstrap manually"
            powershell -Command "& { .\\vcpkg\\bootstrap-vcpkg.bat }"
            powershell -Command "vcpkg install --triplet x64-windows"
            cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=$PWD\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake -DCMAKE_BUILD_TYPE=Release
            cmake --build build --config Release
          else
            echo "On Linux/macOS, use vcpkg if available or skip"
          fi

      - name: xmake build and tests
        if: matrix.config == 'xmake'
        run: |
          # Install xmake
          curl -fsSL https://xmake.io/shget.text | bash || true
          xmake build
          xmake run tests

      - name: Upload build logs
        if: always()
        run: echo "Build step completed on ${{ matrix.os }} (config=${{ matrix.config }})" > build_log.txt
        shell: bash

